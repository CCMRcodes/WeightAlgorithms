% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Breland2017.R
\name{breland}
\alias{breland}
\title{Breland et al. 2017 Weight Cleaning Algorithm}
\usage{
breland(
  df,
  id,
  measures,
  tmeasures,
  outliers = list(LB = 75, UB = 700),
  RatioThresholds = list(Ratio1 = list(low = 0.67, high = 1.5), Ratio2 = list(low =
    0.67, high = 1.5)),
  AddInternals = FALSE
)
}
\arguments{
\item{df}{object of class data.frame, containing \code{id} and
\code{measures}.}

\item{id}{string corresponding to the name of the column of patient
identifiers in \code{df}.}

\item{measures}{string corresponding to the name of the column of
measurements in \code{df}.}

\item{tmeasures}{string corresponding to the name of the column of
measurement collection dates or times in \code{df}. If \code{tmeasures} is
a date object, there may be more than one weight on the same day, if it
precise datetime object, there may not be more than one weight on the same
day.}

\item{outliers}{object of type \code{list} with numeric inputs corresponding
to the upper and lower bound for each time entry. Default is
\code{list(LB = 75, UB = 700)}.}

\item{RatioThresholds}{list of 2 lists, 1 for each ratio (prior and post
measurements), with numeric inputs corresponding to the lower bound and
upper bound for flagging erroneous measurements. Default lower bound is
0.67 and upper bound 1.50, same as Breland et al. 2017.}

\item{AddInternals}{logical, adds additional columns to output data frame
detailing the backward, forward, ratios, and ratio indicators used
interally to process the data. Defaults to FALSE.}
}
\value{
if AddInternals is FALSE, returns input data frame with processed
  data as an additional column \code{measout}. if AddInternals is TRUE then
  it returns the input data frame with processed data \code{measout} and
  columns described in \code{AddInternals}.
}
\description{
\code{breland} returns input data frame with processed data as additional
columns.
}
\examples{
library(dplyr)
data(cdw32)

breland_df <- breland(
   df = cdw32,
   id = "id",
   measures = "Weight",
   tmeasures = "WeightDate"
  )

# dplyr::glimpse(breland_df)
}
