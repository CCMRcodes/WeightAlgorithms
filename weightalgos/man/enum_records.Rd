% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Maciejewski2016.R
\name{enum_records}
\alias{enum_records}
\title{Maciejewski algorithm part I.c. - enumerate records}
\usage{
enum_records(
  df,
  id,
  tmeasures,
  measures,
  varvec = NULL,
  sd_thresholds = list(high_sd_flag = 20L)
)
}
\arguments{
\item{df}{object of class \code{data.table}, containing \code{id} and
\code{measures}}

\item{id}{string corresponding to the name of the column of patient
identifiers in \code{df}.}

\item{tmeasures}{string corresponding to the name of the column of measure
dates and/or times in \code{df}}

\item{measures}{string corresponding to the name of the column of measures in
\code{df}, e.g., numeric weight data if using to clean weight data.}

\item{varvec}{optional. String vector containing \code{df}, \code{id},
\code{measures}, and \code{tmeasures}.}

\item{sd_thresholds}{Object of type \code{list} with 1 Numeric value of the
rolling standard deviation statistic above which the \code{measures} values
of the three associated \code{id}-\code{tmeasures} combinations are
considered indicative of containing one or more "outlier" values.}
}
\value{
`data.table` with properly formatted columns for downstream
  processing/weight cleaning.
}
\description{
Enumerates records from input data set in ascending chronological order
(i.e., 1 = earliest \code{tmeasures} value, 2 = next earliest value, ...,
n = latest \code{tmeasures} value) and descending chronological order.
Calculates standard deviations between \code{measures} values and the
\code{measures} values of the two nearest (chronologically) neighboring
\code{tmeasures} values for each \code{id} value. Flags "high" SD values
when they occur in the first 3 \code{tmeasures} values or in the last 3
\code{tmeasures} values because these scenarios require special handling.
}
\examples{
\dontrun{
data(cdw1000)

consolidated.dt <- consolidate_sameday_records(
  df = cdw1000,
  id = 'id',
  tmeasures = 'WeightDate',
  measures = 'Weight'
)

enumerated.dt <- enum_records(
  df = consolidated.dt,
  id = 'id',
  tmeasures = 'WeightDate',
  measures = 'Weight'
)
}
}
