% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Chan2017.R
\name{chan}
\alias{chan}
\title{Chan 2017 Measurment Cleaning Algorithm}
\usage{
chan(
  df,
  id,
  measures,
  tmeasures,
  outliers = list(LB = 50, UB = 750),
  SDthreshold = 3,
  AddInternals = FALSE
)
}
\arguments{
\item{df}{object of class \code{data.frame}, containing \code{id} and
\code{measures}.}

\item{id}{string corresponding to the name of the column of patient
identifiers in \code{df}.}

\item{measures}{string corresponding to the name of the column of
measurements in \code{df}.}

\item{tmeasures}{string corresponding to the name of the column of
measurement collection dates or times in \code{df}. If \code{tmeasures} is
a date object, there may be more than one weight on the same day,
if it is a precise datetime object, there may not be more than one weight
on the same day.}

\item{outliers}{object of type \code{list} with numeric inputs corresponding
to the upper and lower bound for each time entry. Default is
\code{list(LB = 50, UB = 750)}.}

\item{SDthreshold}{numeric scalar to be multiplied by the \code{SDMeasures}
per \code{id}. E.g., from Chan 2017, "...weights greater than 3 standard
deviations above the mean..." implies \code{SDMeasures = 3}.}

\item{AddInternals}{logical, adds additional columns to output data frame
describing the grouped mean (\code{meanMeasures}) and standard deviation
(\code{SDMeasures}) used interally to process the data. Defaults to FALSE.}
}
\value{
if AddInternals is FALSE, returns input data frame with processed
  data as an additional column \code{measout}. if AddInternals is TRUE then
  it returns the input data frame with processed data \code{measout} and
  columns described in \code{AddInternals}.
}
\description{
For grouped time series, (e.g., per person) Algorithm computes mean and SD of
measurements, per group then removes measurements > \code{SDthreshold} + mean.
}
\examples{
library(dplyr)
data(cdw32)

chan_df <- chan(
   df = cdw32,
   id = "id",
   measures = "Weight",
   tmeasures = "WeightDate"
)

# dplyr::glimpse(chan_df)
}
